{"version":3,"sources":["components/Sidebar.jsx","context/ChannelReducer.js","context/ChannelContext.js","components/DisplayInfo.jsx","App.js","styles/theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","padding","spacing","alignItems","width","maxWidth","backgroundColor","palette","secondary","main","color","primary","light","borderTopLeftRadius","borderBottomLeftRadius","darkModeBox","justifyContent","height","Sidebar","classes","Box","className","variant","Typography","IconButton","aria-label","Date","getFullYear","ChannelReducer","state","action","type","channels","activeChannel","error","payload","INITIAL_STATE","ChannelContext","createContext","ContextProvider","children","useReducer","dispatch","Provider","value","searchbar","margin","channelsContainer","background","borderRadius","flexWrap","overflow","channelCard","flexBasis","boxShadow","channelThumbnail","minHeight","minWidth","channelDetails","channelInfoCard","position","channelInfoThumbnail","resetButton","top","right","ChannelInformationCard","channel","useContext","channelInfo","useState","followers","setFollowers","useEffect","a","channelID","id","axios","get","followerCount","data","total","fetchFollowers","Card","style","CardMedia","image","profile_image_url","title","Divider","orientation","flexItem","CardContent","component","display_name","broadcaster_type","description","created_at","view_count","onClick","res","console","log","fetchFeaturedChannels","DisplayInfo","query","setQuery","handleSubmit","e","preventDefault","handleChannelClick","Container","disableGutters","onSubmit","TextField","fullWidth","label","onChange","target","InputProps","startAdornment","InputAdornment","Button","length","map","Fade","in","CardActionArea","thumbnail_url","gutterBottom","Badge","is_live","game_name","App","createTheme","dark","live","typography","fontFamily","join","h5","fontWeight","responsiveFontSizes","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.53fe7dcf.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Box, IconButton } from '@material-ui/core';\n\n//Icons\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(2),\n        alignItems: 'center',\n        width: '100%',\n        maxWidth: drawerWidth,\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.primary.light,\n        borderTopLeftRadius: '25px',\n        borderBottomLeftRadius: '20px'\n    },\n    darkModeBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n        width: '100%',\n        color: theme.palette.primary.light\n    }\n}));\n\nexport default function Sidebar() {\n    const classes = useStyles();\n\n    return (\n        <Box\n            className={classes.root} \n            variant=\"permanent\"\n        >\n            <Typography\n                variant=\"h4\"\n            >\n                <LiveTvIcon/> Streamer.Info\n            </Typography>\n\n            <Box className={classes.darkModeBox}>\n                <IconButton color=\"primary\" aria-label=\"dark mode toggle\">\n                    <Brightness6Icon/>\n                </IconButton>\n            </Box>\n\n            <Typography\n                variant=\"body1\"\n            >\n                Coded by Elijah Micho. &reg; {new Date().getFullYear()}\n            </Typography>\n        </Box>\n        \n    )\n}\n","import { INITIAL_STATE } from \"./ChannelContext\";\n\nconst ChannelReducer = (state, action) => {\n    switch(action.type){\n        case \"SEARCH_START\":\n            return {\n                channels: [],\n                activeChannel: null,\n                error: false,\n            }\n        case \"SEARCH_SUCCESS\": \n        case \"LOAD_FEATURED\":\n            return {\n                channels: [action.payload],\n                activeChannel: null,\n                error: false\n            }\n        case \"SELECT_CHANNEL\":\n            return {\n                channels: [],\n                activeChannel: action.payload,\n                error: false\n            }\n        case \"RESET_SEARCH\": \n            return INITIAL_STATE\n        default:\n            return state\n    }\n};\n\nexport default ChannelReducer;","import { createContext, useReducer } from 'react';\nimport ChannelReducer from './ChannelReducer';\n\nexport const INITIAL_STATE = {\n    channels: [],\n    activeChannel: null,\n    error: false\n};\n\nexport const ChannelContext = createContext(INITIAL_STATE);\n\nexport const ContextProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(ChannelReducer, INITIAL_STATE);\n    return(\n        <ChannelContext.Provider value={{\n            channels: state.channels,\n            activeChannel: state.activeChannel,\n            error: state.error,\n            dispatch\n        }}>\n            {children}\n        </ChannelContext.Provider>\n    )\n};","import { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { Box, Typography, Card, IconButton, Divider, Fade, Button, CardMedia, CardContent, Container, InputAdornment, TextField, CardActionArea, Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { ChannelContext } from '../context/ChannelContext';\n\n//Icons\nimport SearchIcon from '@material-ui/icons/Search';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n    },\n    searchbar: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n    },\n    margin: {\n        margin: theme.spacing(2)\n    },\n    channelsContainer: {\n        '&::-webkit-scrollbar': {\n            width: '8px',\n            background: theme.palette.secondary.light,\n        },\n        '&::-webkit-scrollbar-thumb': {\n            background: theme.palette.primary.main,\n            borderRadius: '8px'\n        },\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        height: '100%',\n        overflow: 'auto'\n    },\n    channelCard: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexBasis: '28%',\n        height: 345,\n        margin: '10px 15px',\n        padding: theme.spacing(2),\n        borderRadius: '15px',\n        backgroundColor: theme.palette.primary.main,\n        boxShadow: 'rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px'\n    },\n    channelThumbnail: {\n        minHeight: 200,\n        minWidth: '100%',\n        borderRadius: '15px'\n    },\n    channelDetails: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    channelInfoCard: {\n        height: 400,\n        maxWidth: '95%',\n        width: 950,\n        display: 'flex',\n        borderRadius: '15px',\n        position: 'relative',\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.primary.main,\n        boxShadow: 'rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px'\n    },\n    channelInfoThumbnail: {\n        minHeight: 370,\n        flexBasis: '95%',\n        borderRadius: '15px'\n    },\n    resetButton: {\n        height: 25,\n        width: 25,\n        position: 'absolute',\n        top: 10,\n        right: 10\n,    }\n}));\n\nconst ChannelInformationCard = ({channel}) => {\n    const { error, dispatch } = useContext(ChannelContext);\n    const classes = useStyles();\n    const channelInfo = channel[0]\n    const [followers, setFollowers] = useState(0)\n\n    useEffect(() => {\n        const fetchFollowers = async () => {\n            const channelID = channelInfo.id\n            const followerCount = await axios.get(`/channels/select/${channelID}/followers`);\n            setFollowers(followerCount.data.total);\n        }\n        fetchFollowers()\n    }, []);\n\n    const handleReset = () => {\n        dispatch({type: \"RESET_SEARCH\"});\n        const fetchFeaturedChannels = async () => {\n            try{\n                const res = await axios.get(\"/channels\")\n                dispatch({type: \"LOAD_FEATURED\", payload: res.data.data})\n            }catch(err){\n                console.log(err)\n            }\n        }\n        fetchFeaturedChannels()\n    };\n    return (\n        <Card className={classes.channelInfoCard}>\n            <div style={{minWidth:\"300px\"}}>\n                <CardMedia\n                    className={classes.channelInfoThumbnail}\n                    image={channelInfo.profile_image_url}\n                    title=\"TwitchTv Steamer Thumbnail\"\n                />  \n            </div>\n            <Divider orientation=\"vertical\" flexItem/>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h5\">\n                    {channelInfo.display_name}\n                </Typography>\n                <Typography variant=\"body1\">\n                    Creator Status: {channelInfo.broadcaster_type}\n                </Typography>\n                <Typography variant=\"body1\">\n                    Description: {channelInfo.description}\n                </Typography>\n                <Typography variant=\"body1\">\n                    Started streaming: {channelInfo.created_at}\n                </Typography>\n                <Typography variant=\"body1\">\n                    Followers: {followers}\n                </Typography>\n                <Typography variant=\"body1\">\n                    Subscribers: -\n                </Typography>\n                <Typography variant=\"body1\">\n                    Total View Count: {channelInfo.view_count}\n                </Typography>\n            </CardContent>\n            <IconButton className={classes.resetButton} aria-label=\"delete\" onClick={handleReset}>\n                <CancelIcon/>\n            </IconButton>\n        </Card>\n    );\n}\n\nexport default function DisplayInfo() {\n    const classes = useStyles();\n    const { channels, activeChannel, error, dispatch } = useContext(ChannelContext);\n    const [query, setQuery] = useState('');\n    useEffect(() => {\n        const fetchFeaturedChannels = async () => {\n            try{\n                const res = await axios.get(\"/channels\")\n                dispatch({type: \"LOAD_FEATURED\", payload: res.data.data})\n            }catch(err){\n                console.log(err)\n            }\n        }\n        fetchFeaturedChannels()\n    }, [query]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        dispatch({\n            type: \"SEARCH_START\"\n        });\n        try {\n            const res = await axios.get(`/channels/search/${query}`);\n            dispatch({type: \"SEARCH_SUCCESS\", payload: res.data.data});\n        }catch(err){\n            console.log(err);\n        }\n    };\n\n    const handleChannelClick = async (channel) => {\n        try {\n            const channelID = channel.id;\n            const res = await axios.get(`/channels/select/${channelID}`)\n            dispatch({type: \"SELECT_CHANNEL\", payload: res.data.data})\n        }catch(err){\n            console.log(err);\n        }\n    };\n\n    return (\n        <Container disableGutters={true} className={classes.root}>\n            <Box width=\"100%\">\n                <form className={classes.searchbar} onSubmit={handleSubmit}>\n                    <TextField\n                        fullWidth\n                        type=\"search\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        className={classes.margin} \n                        label=\"Find a channel\" \n                        onChange={(e) => setQuery(e.target.value)}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon/>\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <Button \n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                    >\n                        Search\n                    </Button>\n                </form>\n            </Box>\n            \n            <Box className={classes.channelsContainer}>\n                {activeChannel \n                ? <ChannelInformationCard channel={activeChannel}/> \n                : channels.length > 0 ? \n                channels[0].map(channel => (\n                    <Fade\n                        in={true}\n                        key={`channel-${channel.id}`}\n                    >\n                        <Card className={classes.channelCard} >\n                            <CardActionArea onClick={() => handleChannelClick(channel)}>\n                                <CardMedia\n                                        className={classes.channelThumbnail}\n                                        image={channel.thumbnail_url}\n                                        title=\"TwitchTv Steamer Thumbnail\"\n                                />\n                                <div className={classes.channelDetails}>\n                                    <CardContent>\n                                            <Typography gutterBottom variant=\"h5\" component=\"h5\">\n                                                <Badge color={channel.is_live ? \"error\" : \"default\"} variant=\"dot\">\n                                                    {channel.display_name}\n                                                </Badge>\n                                            </Typography>\n                                            <Typography>\n                                                {channel.is_live ? `Currently streaming: ${channel.game_name}` : `Last game played: ${channel.game_name}`}\n                                            </Typography>\n                                    </CardContent>\n                                </div>\n                            </CardActionArea>\n                        </Card>\n                    </Fade>\n                ))\n                : null\n                }\n            </Box>\n        </Container>\n    )\n};\n","import { makeStyles } from '@material-ui/core/styles';\nimport { Container, Box } from '@material-ui/core';\nimport Sidebar from './components/Sidebar';\nimport DisplayInfo from './components/DisplayInfo';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n    backgroundColor: theme.palette.secondary,\n    display: 'flex',\n    borderTopLeftRadius: '20px',\n    borderBottomLeftRadius: '20px'\n  },\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: `calc(100% - 300px)`,\n\n    height: '100%'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Container \n      className={classes.root}\n      disableGutters={true}\n    >\n      <Sidebar/>\n      <Box className={classes.main}>\n        <DisplayInfo/>\n      </Box>\n      \n    </Container>\n  );\n}\n\nexport default App;\n","import { createTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nlet theme = createTheme({\n    palette: {\n        primary: {\n            main: '#efeff1',\n            dark: '#bebebf',\n            light: '#ffffff'\n        },\n        secondary: {\n            main: '#6441a5',\n            light: '#956dd7'\n        },\n        live: {\n            main: '#e91916'\n        }\n    },\n    typography: {\n        fontFamily: [\n            'Inter',\n            'system-ui',\n            'Roboto',\n            'Arial',\n            'sans-serif',\n        ].join(','),\n        h5: {\n            fontWeight: 600\n        }\n    }\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport theme from './styles/theme';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport { ContextProvider } from './context/ChannelContext';\n\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline/>\n    <ContextProvider>\n      <App/>\n    </ContextProvider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}